constants: []
custom_exceptions: []
definitions:
- block:
  - pseudo_type: Void
    target: {name: raw, pseudo_type: String, type: local}
    type: assignment
    value:
      args:
      - {name: filename, pseudo_type: String, type: local}
      function: read_file
      namespace: io
      pseudo_type: String
      type: standard_call
  - pseudo_type: Void
    target:
      name: lines
      pseudo_type: [List, String]
      type: local
    type: assignment
    value:
      args:
      - {pseudo_type: String, type: string, value: \n}
      message: split
      pseudo_type: [List, String]
      receiver: {name: raw, pseudo_type: String, type: local}
      type: standard_method_call
  - pseudo_type:
    - List
    - - Tuple
      - String
      - String
      - [Array, Int, 2]
    type: implicit_return
    value:
      block:
      - args:
        - {name: line, pseudo_type: String, type: local}
        function:
          name: parse_result
          pseudo_type:
          - Function
          - String
          - - Tuple
            - String
            - String
            - [Array, Int, 2]
          type: local
        pseudo_type:
        - Tuple
        - String
        - String
        - [Array, Int, 2]
        type: call
      function: filter_map
      iterators:
        iterator: {name: line, pseudo_type: String, type: local}
        type: for_iterator
      pseudo_type:
      - List
      - - Tuple
        - String
        - String
        - [Array, Int, 2]
      sequences:
        sequence:
          name: lines
          pseudo_type: [List, String]
          type: local
        type: for_sequence
      test:
      - args: []
        message: present?
        pseudo_type: Boolean
        receiver: {name: line, pseudo_type: String, type: local}
        type: standard_method_call
      type: standard_iterable_call
  name: load_results
  params:
  - {name: filename, pseudo_type: Function, type: local}
  pseudo_type:
  - Function
  - String
  - - List
    - - Tuple
      - String
      - String
      - [Array, Int, 2]
  return_type:
  - List
  - - Tuple
    - String
    - String
    - [Array, Int, 2]
  type: function_definition
- block:
  - pseudo_type: Void
    target: {name: away_index, pseudo_type: Int, type: local}
    type: assignment
    value:
      left:
        args:
        - {pseudo_type: String, type: string, value: ' - '}
        message: find
        pseudo_type: Int
        receiver: {name: line, pseudo_type: String, type: local}
        type: standard_method_call
      op: +
      pseudo_type: Int
      right: {pseudo_type: Int, type: int, value: 3}
      type: binary_op
  - pseudo_type: Void
    target: {name: result_index, pseudo_type: Int, type: local}
    type: assignment
    value:
      left:
        args:
        - {pseudo_type: String, type: string, value: ' '}
        - {name: away_index, pseudo_type: Int, type: local}
        message: find_from
        pseudo_type: Int
        receiver: {name: line, pseudo_type: String, type: local}
        type: standard_method_call
      op: +
      pseudo_type: Int
      right: {pseudo_type: Int, type: int, value: 1}
      type: binary_op
  - pseudo_type: Void
    target:
      name: goals
      pseudo_type: [List, String]
      type: local
    type: assignment
    value:
      args:
      - {pseudo_type: String, type: string, value: ':'}
      message: split
      pseudo_type: [List, String]
      receiver:
        args:
        - {name: result_index, pseudo_type: Int, type: local}
        message: substr_from
        pseudo_type: String
        receiver: {name: line, pseudo_type: String, type: local}
        type: standard_method_call
      type: standard_method_call
  - pseudo_type:
    - Tuple
    - String
    - String
    - [Array, Int, 2]
    type: implicit_return
    value:
      elements:
      - args:
        - left: {name: away_index, pseudo_type: Int, type: local}
          op: '-'
          pseudo_type: Int
          right: {pseudo_type: Int, type: int, value: 3}
          type: binary_op
        message: substr_to
        pseudo_type: String
        receiver: {name: line, pseudo_type: String, type: local}
        type: standard_method_call
      - args:
        - {name: away_index, pseudo_type: Int, type: local}
        - left: {name: result_index, pseudo_type: Int, type: local}
          op: '-'
          pseudo_type: Int
          right: {pseudo_type: Int, type: int, value: 1}
          type: binary_op
        message: substr
        pseudo_type: String
        receiver: {name: line, pseudo_type: String, type: local}
        type: standard_method_call
      - elements:
        - args: []
          message: to_int
          pseudo_type: Int
          receiver:
            index: {pseudo_type: Int, type: int, value: 0}
            pseudo_type: String
            sequence:
              name: goals
              pseudo_type: [List, String]
              type: local
            type: index
          type: standard_method_call
        - args: []
          message: to_int
          pseudo_type: Int
          receiver:
            index: {pseudo_type: Int, type: int, value: 1}
            pseudo_type: String
            sequence:
              name: goals
              pseudo_type: [List, String]
              type: local
            type: index
          type: standard_method_call
        pseudo_type: [Array, Int, 2]
        type: array
      pseudo_type:
      - Tuple
      - String
      - String
      - [Array, Int, 2]
      type: tuple
  name: parse_result
  params:
  - {name: line, pseudo_type: Function, type: local}
  pseudo_type:
  - Function
  - String
  - - Tuple
    - String
    - String
    - [Array, Int, 2]
  return_type:
  - Tuple
  - String
  - String
  - [Array, Int, 2]
  type: function_definition
- block:
  - pseudo_type: Int
    type: implicit_return
    value:
      args:
      - block:
        - pseudo_type: Int
          type: implicit_return
          value:
            left: {name: memo, pseudo_type: Int, type: local}
            op: +
            pseudo_type: Int
            right:
              args:
              - {name: team, pseudo_type: String, type: local}
              - index: {pseudo_type: Int, type: int, value: 0}
                pseudo_type: String
                sequence:
                  name: result
                  pseudo_type:
                  - Tuple
                  - String
                  - String
                  - [Array, Int, 2]
                  type: local
                type: index
              - index: {pseudo_type: Int, type: int, value: 1}
                pseudo_type: String
                sequence:
                  name: result
                  pseudo_type:
                  - Tuple
                  - String
                  - String
                  - [Array, Int, 2]
                  type: local
                type: index
              - index: {pseudo_type: Int, type: int, value: 2}
                pseudo_type: [Array, Int, 2]
                sequence:
                  name: result
                  pseudo_type:
                  - Tuple
                  - String
                  - String
                  - [Array, Int, 2]
                  type: local
                type: index
              function:
                name: result_points
                pseudo_type:
                - Function
                - String
                - String
                - String
                - [Array, Int, 2]
                - Int
                type: local
              pseudo_type: Int
              type: call
            type: binary_op
        params:
        - {name: memo, pseudo_type: Int, type: local}
        - name: result
          pseudo_type:
          - Tuple
          - String
          - String
          - [Array, Int, 2]
          type: local
        pseudo_type:
        - Function
        - Int
        - - Tuple
          - String
          - String
          - [Array, Int, 2]
        - Int
        return_type: Int
        type: anonymous_function
      - {pseudo_type: Int, type: int, value: 0}
      message: reduce
      pseudo_type: Int
      receiver:
        name: results
        pseudo_type:
        - List
        - - Tuple
          - String
          - String
          - [Array, Int, 2]
        type: local
      type: standard_method_call
  name: calculate_points
  params:
  - {name: results, pseudo_type: Function, type: local}
  - name: team
    pseudo_type:
    - List
    - - Tuple
      - String
      - String
      - [Array, Int, 2]
    type: local
  pseudo_type:
  - Function
  - - List
    - - Tuple
      - String
      - String
      - [Array, Int, 2]
  - String
  - Int
  return_type: Int
  type: function_definition
- block:
  - block:
    - pseudo_type: Int
      type: implicit_return
      value: {pseudo_type: Int, type: int, value: 3}
    otherwise:
      block:
      - pseudo_type: Int
        type: implicit_return
        value: {pseudo_type: Int, type: int, value: 1}
      otherwise:
        block:
        - pseudo_type: Int
          type: implicit_return
          value: {pseudo_type: Int, type: int, value: 0}
        pseudo_type: Void
        type: else_statement
      pseudo_type: Void
      test:
        left:
          left:
            index: {pseudo_type: Int, type: int, value: 0}
            pseudo_type: Int
            sequence:
              name: goals
              pseudo_type: [Array, Int, 2]
              type: local
            type: index
          op: ==
          pseudo_type: Boolean
          right:
            index: {pseudo_type: Int, type: int, value: 1}
            pseudo_type: Int
            sequence:
              name: goals
              pseudo_type: [Array, Int, 2]
              type: local
            type: index
          type: comparison
        op: and
        pseudo_type: Boolean
        right:
          left:
            left: {name: host, pseudo_type: String, type: local}
            op: ==
            pseudo_type: Boolean
            right: {name: team, pseudo_type: String, type: local}
            type: comparison
          op: or
          pseudo_type: Boolean
          right:
            left: {name: away, pseudo_type: String, type: local}
            op: ==
            pseudo_type: Boolean
            right: {name: team, pseudo_type: String, type: local}
            type: comparison
          type: binary_op
        type: binary_op
      type: elseif_statement
    pseudo_type: Void
    test:
      left:
        left:
          left: {name: host, pseudo_type: String, type: local}
          op: ==
          pseudo_type: Boolean
          right: {name: team, pseudo_type: String, type: local}
          type: comparison
        op: and
        pseudo_type: Boolean
        right:
          left:
            index: {pseudo_type: Int, type: int, value: 0}
            pseudo_type: Int
            sequence:
              name: goals
              pseudo_type: [Array, Int, 2]
              type: local
            type: index
          op: '>'
          pseudo_type: Boolean
          right:
            index: {pseudo_type: Int, type: int, value: 1}
            pseudo_type: Int
            sequence:
              name: goals
              pseudo_type: [Array, Int, 2]
              type: local
            type: index
          type: comparison
        type: binary_op
      op: or
      pseudo_type: Boolean
      right:
        left:
          left: {name: away, pseudo_type: String, type: local}
          op: ==
          pseudo_type: Boolean
          right: {name: team, pseudo_type: String, type: local}
          type: comparison
        op: and
        pseudo_type: Boolean
        right:
          left:
            index: {pseudo_type: Int, type: int, value: 0}
            pseudo_type: Int
            sequence:
              name: goals
              pseudo_type: [Array, Int, 2]
              type: local
            type: index
          op: <
          pseudo_type: Boolean
          right:
            index: {pseudo_type: Int, type: int, value: 1}
            pseudo_type: Int
            sequence:
              name: goals
              pseudo_type: [Array, Int, 2]
              type: local
            type: index
          type: comparison
        type: binary_op
      type: binary_op
    type: if_statement
  name: result_points
  params:
  - {name: team, pseudo_type: Function, type: local}
  - {name: host, pseudo_type: String, type: local}
  - {name: away, pseudo_type: String, type: local}
  - {name: goals, pseudo_type: String, type: local}
  pseudo_type:
  - Function
  - String
  - String
  - String
  - [Array, Int, 2]
  - Int
  return_type: Int
  type: function_definition
dependencies: []
main:
- block:
  - args:
    - {pseudo_type: String, type: string, value: 'usage: football <stats-file> <team>'}
    function: display
    namespace: io
    pseudo_type: Void
    type: standard_call
  otherwise:
    block:
    - pseudo_type: Void
      target:
        name: results
        pseudo_type:
        - List
        - - Tuple
          - String
          - String
          - [Array, Int, 2]
        type: local
      type: assignment
      value:
        args:
        - args:
          - {pseudo_type: Int, type: int, value: 1}
          function: index
          namespace: system
          pseudo_type: String
          type: standard_call
        function:
          name: load_results
          pseudo_type:
          - Function
          - String
          - - List
            - - Tuple
              - String
              - String
              - [Array, Int, 2]
          type: local
        pseudo_type:
        - List
        - - Tuple
          - String
          - String
          - [Array, Int, 2]
        type: call
    - args:
      - args:
        - name: results
          pseudo_type:
          - List
          - - Tuple
            - String
            - String
            - [Array, Int, 2]
          type: local
        - args:
          - {pseudo_type: Int, type: int, value: 2}
          function: index
          namespace: system
          pseudo_type: String
          type: standard_call
        function:
          name: calculate_points
          pseudo_type:
          - Function
          - - List
            - - Tuple
              - String
              - String
              - [Array, Int, 2]
          - String
          - Int
          type: local
        pseudo_type: Int
        type: call
      function: display
      namespace: io
      pseudo_type: Void
      type: standard_call
    pseudo_type: Void
    type: else_statement
  pseudo_type: Void
  test:
    left:
      args: []
      function: arg_count
      namespace: system
      pseudo_type: Int
      type: standard_call
    op: <
    pseudo_type: Boolean
    right: {pseudo_type: Int, type: int, value: 3}
    type: comparison
  type: if_statement
type: module
